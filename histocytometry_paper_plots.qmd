---
title: "Histocytometry gating"
author: John Moore
date: 2023-09-21
format: html
editor: visual
---

```{r, include= FALSE}
knitr::opts_chunk$set(echo= FALSE)
library(dplyr)
library(data.table)
library(here)
library(ggplot2)
library(cowplot)
library(latex2exp)
library(patchwork)
library(tidyr)
library(ggbeeswarm)
library(ggpubr)
library(PMCMRplus)
library(tibble)
library(gt)
library(nlme)
library(chisq.posthoc.test)
library(ggpubr)
library(rstatix)
library(car)
library(emmeans)
library(afex)
library(ggsignif)
```

Notes: 

- Cell types as gated by Colin and John

- Area of thymus regions calculated using CMJ boundaries that expand 50um outwards in both directions from the cortical-medullary boundary. 


```{r}
raw_dir = "/stor/scratch/Ehrlich/Users/John/histocytometry/raw_images/images_2023-08-10"
hc_dirs = list.dirs(path= raw_dir, full.names= TRUE) 
hc_dirs = sort(hc_dirs[grepl("_[A-D]$", hc_dirs)])
hc_dirs = hc_dirs[!grepl("Sirpa_C$|CD207_CD11c_XCR1_C$|MerTK_C$|20x_pan_DAPI_CD63_CD11c_XCR1_D$", hc_dirs)]
```

```{r}
## Load in data
region_areas <- fread("/stor/scratch/Ehrlich/Users/John/histocytometry/raw_images/images_2023-08-10/data/region_areas_50um.csv") %>% 
  as.data.frame() %>% 
  dplyr::filter(region_id != 0)
  
gated_df_list <- vector(mode= "list", length = length(hc_dirs))
names(gated_df_list) <- hc_dirs

for(histo_dir in hc_dirs){
  gated_df_list[[histo_dir]] <- paste0(histo_dir, "/gated_pops_w_new_CMJ.csv") %>% 
    fread() %>% 
    as.data.frame() %>% 
    mutate(sample = histo_dir) %>% 
    rename(region_id= tissue_intensity_median) %>% 
    filter(region_id != 0) %>% 
    left_join(region_areas, by= c("sample", "region_id")) %>% 
    dplyr::filter(cell_type != "not_annotated") %>% 
    dplyr::select(CellID, X_centroid, Y_centroid, Area, cell_type, region_id, sample,
           region_pixel_count, region_area, region_prop_table, total_area)
}

all_gated_cells <- do.call(rbind, gated_df_list)
all_gated_cells %>% count(cell_type) %>% filter(cell_type == "pDC")
  ## pDC	11547 	

  ## Removing funky tiles
    ## SiglecH_A has 1
    ## SiglecH_B has 2
all_gated_cells <- all_gated_cells %>% filter(!(grepl("20x_pan_DAPI_B220_CD11c_SiglecH_A", sample) &
           Y_centroid < 14762 & Y_centroid > 13361 & X_centroid < 4190  & X_centroid > 2801),
         !(grepl("20x_pan_DAPI_B220_CD11c_SiglecH_B", sample) &
           ((Y_centroid < 9308 & Y_centroid > 7916 & X_centroid < 5522 & X_centroid > 4112) |
            (Y_centroid < 16243 & Y_centroid > 14851 & X_centroid < 8315 & X_centroid > 6903))))

all_gated_cells %>% count(cell_type) %>% filter(cell_type == "pDC")
  ## pDC	10581	
  ## 966 pDCs removed 

## SiglecH_B tiles
# mask[7916:9308, 4112:5522] = 1
# mask[14851:16243, 6903:8315] = 1
```

```{r}
all_region_info <- all_gated_cells %>%
  group_by(sample, region_id, cell_type) %>% 
  mutate(n_cell = length(unique(CellID)), 
         cells_per_area = n_cell/region_area) %>% ## Units here will be cells per um^2
  ungroup() %>% 
  distinct(sample, region_id, n_cell, region_area, cells_per_area, cell_type) %>% 
  mutate(thymus_region = ifelse(region_id == 1, "Cortex", 
                                ifelse(region_id == 2, "CMJ", 
                                       ifelse(region_id == 3, "Medulla", NA))),
         thymus_region = factor(thymus_region, levels= c("Cortex", "CMJ", "Medulla")),
         cells_per_area_converted = cells_per_area * 1000^2,
         cell_type = ifelse(cell_type == "aDC2" & grepl("DAPI_CD63_CD11c_Sirpa_[A-D]$", sample),
                            "aDC2_CD11c", 
                            ifelse(cell_type == "aDC2" & grepl("DAPI_Sirpa_CD63_MerTK_[A-D]$", sample), 
                                   "aDC2_MerTK", cell_type)),
         cell_type = factor(cell_type, 
                            levels= c("CD207+cDC1","CD14+cDC2", 
                                      "aDC1", "aDC2_CD11c", "aDC2_MerTK", "pDC", "Macrophage"))) %>% 
  as.data.frame()
```


```{r}
thymus_region_cell_counts <- all_region_info %>% 
  filter(cell_type != "Macrophage") %>% 
  ggplot() +
  aes(x= thymus_region, y= n_cell) + 
  geom_boxplot(outlier.shape= NA) +
  geom_beeswarm(size= 2.5) + 
  theme_cowplot() + 
  facet_wrap(~cell_type) +
  xlab("") +
  ylab("Cell count")

plot(thymus_region_cell_counts)
```

```{r}
thymus_regions_cell_counts_scaled <- all_region_info %>% 
  filter(cell_type != "Macrophage") %>% 
  ggplot() +
  aes(x= thymus_region, y= cells_per_area_converted) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_beeswarm(size= 2.5) +
  theme_cowplot() +
  facet_wrap(~cell_type,scales = "free_y") +
  xlab("") + 
  ylab(TeX("Cells / $mm^2$"))

plot(thymus_regions_cell_counts_scaled)

plot(thymus_regions_cell_counts_scaled + geom_line(aes(group= sample), linetype = "dashed"))
  ## pDC_A is the medullary outlier. I wonder if that is the cortical segmentation failures rearing their ugly head.
```



```{r}
## Ratio of aDC2s to macrophages
aDC2_ratio <- all_region_info %>% 
  filter(cell_type %in% c("aDC2_MerTK", "Macrophage")) %>% 
  pivot_wider(id_cols = c(sample, thymus_region),
              names_from  = cell_type, 
              values_from = cells_per_area_converted) %>% 
  mutate(aDC2_over_mac = aDC2_MerTK / Macrophage,
         prob_aDC2     = aDC2_MerTK / (aDC2_MerTK + Macrophage)) %>% 
  as.data.frame()

ggplot(aDC2_ratio) +
  aes(x= thymus_region, y= aDC2_over_mac) +
  geom_boxplot(outlier.shape = NA) + 
  geom_beeswarm(size = 2.5) + 
  geom_hline(yintercept = 1, linetype = 2, linewidth= 1) +  
  xlab("") + 
  ylab("Ratio of aDC2s to Macrophages for MerTK stain") +
  theme_cowplot()

ggplot(aDC2_ratio) +
  aes(x= thymus_region, y= prob_aDC2) +
  geom_boxplot(outlier.shape = NA) + 
  geom_beeswarm(size = 2.5) + 
  scale_x_discrete(name = "") + 
  scale_y_continuous(name = "Prop. of aDC2s out of aDC2s & Macs from MerTK stain",
                     limits = c(0, NA), 
                     expand = expansion(mult= c(0, 0.1))) +  
  theme_cowplot()
```

### aDC2 levels after macrophage subtraction 

I multiplied the CD11c+ aDC2s by the median proportion of the cells from the MerTK stains that are aDC2s. In other words, I assumed that the false positive rate for macs that were called CD11c+ aDC2s was the same as the number of CD63+ Sirpa+ cells in the MerTK stain that were called macropahges.

Note that the CD11c+ aDC2s in the cortex and CMJ decrease as that's where the macrophages are.
```{r, fig.dim= c(14,8)}
## Measure of center for odds that aDC2 is a macrophage based on MerTK given its region
## Measure of spread is the IQR inferred from 3 data points...
aDC2_stats <- aDC2_ratio %>% 
  group_by(thymus_region) %>% 
  mutate(med_prob = median(prob_aDC2),
         Q1_prob  = quantile(prob_aDC2, probs= 0.25),
         Q3_prob  = quantile(prob_aDC2, probs= 0.75)) %>% 
  ungroup() %>% 
  select(thymus_region, matches("prob$")) %>% 
  distinct() 

corrected_all_region_info <- all_region_info %>% 
  left_join(aDC2_stats, by= "thymus_region") %>% 
  mutate(mac_corrected_cells_per_area_converted = ifelse(cell_type == "aDC2_CD11c", 
                                                         cells_per_area_converted * med_prob,
                                                         cells_per_area_converted))



plot_cell_names <- c("CD207+cDC1" = "CD207+  cDC1", 
                     "CD14+cDC2"   = "CD14+  cDC2",
                     "aDC1"        = "aDC1",
                     "aDC2_CD11c"  = "aDC2", 
                     "aDC2_MerTK"  = "MerTK+  aDC2", 
                     "pDC"         = "pDC",
                     "Macrophage"  = "Macrophage")

corrected_cells_per_area_plot <- corrected_all_region_info %>% 
  dplyr::filter(!(cell_type %in% c("Macrophage", "aDC2_MerTK"))) %>% 
  mutate(cell_type = plot_cell_names[cell_type],
         cell_type = factor(cell_type, 
                            levels= c("CD207+  cDC1","CD14+  cDC2", 
                                      "aDC1", "aDC2", "pDC"))) %>% 

  ggplot() +
  aes(x= thymus_region, y= mac_corrected_cells_per_area_converted) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_beeswarm(size= 2.5) +
  theme_cowplot(font_size = 20) +
  facet_wrap(~cell_type, scales = "free_y") +
  xlab("") + 
  scale_y_continuous(name   = TeX("Cells / $mm^2$"),
                     expand = expansion(mult= c(0, 0.5)),
                     limits = c(0, NA)) 

corrected_cells_per_area_plot + geom_line(aes(group = sample))

ggsave(filename = here("histocytometry/plots/corrected_cells_per_area_sans_funky_tiles.pdf"),
       plot     = corrected_cells_per_area_plot, 
       width    = 14,
       height   = 8)
```



```{r}
## Repeated measures anova 
  ## Repeated measures refers to multiple measurements from the same individual (paired)
p_list <- vector(mode= "list", length= length(uni_cell_types))
names(p_list) <- uni_cell_types

for(uni_cell_type in uni_cell_types){
  print(uni_cell_type)
  model_cell <- modeling_df %>% 
    as.data.frame() %>%
    distinct(log10_density, thymus_region, cell_type, sample) %>% 
    filter(cell_type == uni_cell_type)
  
  
  afmod <- afex::aov_car(log10_density ~ thymus_region + Error(sample/thymus_region),
                         data= model_cell)
    ## model_id is the between subject variance
    ## Including thymus_region is the within subject variance 
      ## I should do that with Error(model_id/thymus_region)
  print(afex::nice(afmod, es="pes", correction = "GG"))
  
  em_version <- emmeans::emmeans(afmod, specs = ~thymus_region)
  emmeans_results <- emmeans(afmod, "thymus_region")
  pairwise_results <- pairs(emmeans_results, adjust = "tukey")
  print(pairwise_results)
  
  p_list[[uni_cell_type]] <- pairwise_results %>% 
    as.data.frame() %>% 
    mutate(cell_type= uni_cell_type,
           stars=  case_when(p.value < 0.0001 ~ "***",
                             p.value < 0.01   ~ "**",
                             p.value < 0.05   ~ "*",
                             p.value > 0.05   ~ "ns")) 
}
one_way_results <- rbindlist(l= p_list, use.names= TRUE)
```

```{r}
p_repeated_measures_anova <- one_way_results %>% 
  mutate(cell_type = plot_cell_names[cell_type],
         cell_type = factor(cell_type, 
                            levels= c("CD207+  cDC1","CD14+  cDC2", 
                                      "aDC1", "aDC2", "pDC"))) %>%
  arrange(cell_type, contrast) %>% 
    ## Re-arrange to match order of facets 
  mutate(start = rep(c("CMJ", "Cortex", "Cortex"),   times= 5),
         end   = rep(c("Medulla", "CMJ", "Medulla"), times= 5), 
         y     = c(600, 350, 700,
                   200, 50, 233,
                   500, 200, 583,
                   45, 35, 52.5,
                   128, 110, 150))

final_plot_data <- corrected_all_region_info %>% 
  dplyr::filter(!(cell_type %in% c("Macrophage", "aDC2_MerTK"))) %>% 
  mutate(cell_type = plot_cell_names[cell_type],
         cell_type = factor(cell_type, 
                            levels= c("CD207+  cDC1","CD14+  cDC2", 
                                      "aDC1", "aDC2", "pDC"))) %>% 
  rename(cell_density= mac_corrected_cells_per_area_converted)

cell_density_w_pvalues <- final_plot_data %>% 
  ggplot() +
  aes(x= thymus_region, y= cell_density) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_beeswarm(size= 2.5) +
  geom_signif(data= p_repeated_measures_anova, 
              aes(xmin = start, xmax= end, 
                  annotations = stars,
                  y_position= y),
              textsize= 8, 
              manual= TRUE) +
  theme_cowplot(font_size = 20) +
  facet_wrap(~cell_type, scales = "free_y") +
  xlab("") + 
  scale_y_continuous(name   = TeX("Cells / $mm^2$"),
                     expand = expansion(mult= c(0.05, 0.15)),
                     limits = c(0, NA)) 
  
cell_density_w_pvalues

cell_density_w_pvalues + geom_line(aes(group = sample))

ggsave(filename = here("histocytometry/plots/corrected_cell_density_w_pvalues_sans_tile_and_corrected_SiglecH_A_medulla.pdf"),
       plot     = cell_density_w_pvalues, 
       width    = 14,
       height   = 8)
```

## Cell type proportion figure with Ehrlich data
```{r, fig.dim = c(12, 8)}
cell_type_props <- corrected_all_region_info %>% 
  mutate(n_cell = ifelse(cell_type == "aDC2_CD11c",
                         n_cell*med_prob, ## Correcting for false-positive aDC2s
                         n_cell)) %>% 
  group_by(sample, cell_type) %>% 
  mutate(n_cells_sample = sum(n_cell)) %>% 
  group_by(sample, cell_type, thymus_region) %>% 
  mutate(prop_cells_region = n_cell/n_cells_sample) %>% 
  group_by(cell_type, thymus_region) %>% 
  mutate(Q1_prop = quantile(prop_cells_region, probs= 0.25),
         Q3_prop = quantile(prop_cells_region, probs= 0.75),
         med_prop = median(prop_cells_region),
         prop_sd = sd(prop_cells_region)) %>% 
  ungroup()


cell_type_props_plot <- cell_type_props %>% 
  dplyr::filter(!(cell_type %in% c("Macrophage", "aDC2_MerTK"))) %>% 
  mutate(cell_type = plot_cell_names[cell_type],
         cell_type = factor(cell_type, 
                            levels= c("CD207+  cDC1","CD14+  cDC2", 
                                      "aDC1", "aDC2", "pDC"))) %>% 
  ggplot() +
  aes(x= thymus_region, y= prop_cells_region) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_beeswarm(size= 2.5) +
  theme_cowplot(font_size = 20) +
  facet_wrap(~cell_type) +
  xlab("") + 
  scale_y_continuous(name   = "Cell frequencies",
                     expand = expansion(mult= c(0.05, 0.15)),
                     limits = c(0, 1)) 
                     


ggsave(plot     = cell_type_props_plot,
       filename = here("histocytometry/plots/cell_type_props_plot_mac_corrected.pdf"),
       width    = 14,
       height   = 8)

data_path= "/stor/scratch/Ehrlich/Users/John/histocytometry/raw_images/images_2023-08-10/data/"
cell_type_props %>% 
  mutate(sample = gsub(".*/", "", sample)) %>% 
  dplyr::distinct(sample, thymus_region, cell_type, prop_cells_region,
                  Q1_prop, med_prop, Q3_prop) %>% 
  fwrite(file = paste0(data_path, "cell_type_proportions_by_region_mac_corrected.csv"),
         row.names = FALSE)
```



```{r}
cortical_DC_plot_data <- corrected_all_region_info %>% 
  filter(!(cell_type %in%  c("aDC2_MerTK", "Macrophage")) & thymus_region == "Cortex") %>% 
  mutate(cell_type = plot_cell_names[cell_type],
         cell_type = factor(cell_type, 
                            levels= c("CD207+  cDC1","CD14+  cDC2", 
                                      "aDC1", "aDC2", "pDC"))) %>%
  rename(cell_density= mac_corrected_cells_per_area_converted) %>% 
  mutate(log10_density = log10(cell_density))

## statistical test
cortical_DC_anova <- compare_means(formula= log10_density ~ cell_type, method= "anova", data= cortical_DC_plot_data) 
  ## This is significant, but somewhat limited given the pairwise comparisons results. 
cortical_DC_kruskal <- compare_means(formula= cell_density ~ cell_type, method= "kruskal.test", data= cortical_DC_plot_data) 
  ## Also significant, I think for consistency, the log10 transformation and anova is better. 

cortical_DC_stats <- compare_means(formula= log10_density ~ cell_type, method= "t.test", data= cortical_DC_plot_data) %>%
  mutate(is_adj_sig = p.adj < 0.05) 
table(cortical_DC_stats$is_adj_sig)
  ## After multiple testing-correction, nothing worked even with a t-test.
  ## If I do a log-transformation prior to the t-test, I get one significant comparison after multiple testing-correction.
cortical_DC_stats <- cortical_DC_stats %>% filter(is_adj_sig) %>% mutate(y.position = 1.8)

## plot

# Untransformed
cortical_DC_cell_density_plot <- cortical_DC_plot_data %>% 
  ggplot() +
  aes(x= cell_type, y= cell_density) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_beeswarm(size= 2.5) +
  theme_cowplot(font_size = 20) +
  xlab("") + 
  scale_y_continuous(name   = TeX("Cells / $mm^2$"),
                     expand = expansion(mult= c(0.05, 0.15)),
                     limits = c(0, NA))  +
  ggtitle("Cortical Cell Density") 
cortical_DC_cell_density_plot 

ggsave(plot     = cortical_DC_cell_density_plot,
       filename = here("histocytometry/plots/cortical_DC_density_2023-11-06.pdf"),
       width    = 10,
       height   = 6)

# Log10 transformed
cortical_DC_log10_density_plot <- cortical_DC_plot_data %>% 
  ggplot() +
  aes(x= cell_type, y= log10_density) + 
  geom_boxplot(outlier.shape = NA) + 
  geom_beeswarm(size= 2.5) +
  theme_cowplot(font_size = 20) +
  xlab("") + 
  scale_y_continuous(name   = TeX("Cells / $mm^2$ (log10)"),
                     expand = expansion(mult= c(0.05, 0.15)),
                     limits = c(0, NA))  +
  ggtitle("Cortical Cell Density") 

cortical_DC_log10_density_plot 

ggsave(plot     = cortical_DC_log10_density_plot,
       filename = here("histocytometry/plots/cortical_DC_density_log10_2023-11-06.pdf"),
       width    = 10,
       height   = 6)

ggsave(plot     = cortical_DC_log10_density_plot + stat_pvalue_manual(cortical_DC_stats, label = "p.adj"),
       filename = here("histocytometry/plots/cortical_DC_density_log10_w_signif_2023-11-06.pdf"),
       width    = 10,
       height   = 6)

ggsave(plot     = cortical_DC_log10_density_plot + 
         annotate(x= "aDC1", y= 1.75, geom= "text", size= 7,
                  label= paste0("Anova, p = ", format(as.numeric(cortical_DC_anova$p.format), scientific= TRUE, digits= 2))),
       filename = here("histocytometry/plots/cortical_DC_density_log10_w_anova_2023-11-06.pdf"),
       width    = 10,
       height   = 6)
```


## Saving cell density data
```{r}
cell_density_saved <- corrected_all_region_info %>% 
  select(sample, n_cell, region_area, cells_per_area, cell_type,
         thymus_region,mac_corrected_cells_per_area_converted) %>% 
  rename(corrected_cell_density= mac_corrected_cells_per_area_converted)

fwrite(x= cell_density_saved, 
       file= "/stor/scratch/Ehrlich/Users/John/histocytometry/raw_images/images_2023-08-10/data/cell_density_per_area_2023-11-06.csv",
       row.names = FALSE)

```